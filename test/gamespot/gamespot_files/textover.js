var TextOverlay=new Class({Implements:[Options,Events],options:{poll:false,pollInterval:250},initialize:function(B,C,A){if(!B&&!C){return false;}this.element=$(B);this.overtext=$(C);this.setOptions(A);this.attach(this.element);if(this.options.poll){this.poll();}},toElement:function(){return this.element;},attach:function(){this.overtext.addEvents({click:this.hide.bind(this)});this.element.addEvents({focus:this.focus.bind(this),blur:this.assert.bind(this),change:this.assert.bind(this)}).store("TextOverlay",this);
this.assert();},hide:function(){if(this.visible&&!this.element.get("disabled")){this.fireEvent("textHide",[this.element,this.overtext]);this.visible=false;this.pollingPaused=true;try{this.element.fireEvent("focus").focus();}catch(A){}}return this;},show:function(){if(!this.visible){this.fireEvent("textShow",[this.element,this.overtext]);this.visible=true;this.pollingPaused=false;}return this;},focus:function(){if(!this.visible&&this.element.get("disabled")){return ;}this.hide();},assert:function(){this[this.test()?"show":"hide"]();
},test:function(){return !this.element.get("value");},poll:function(A){if(this.poller&&!A){return this;}if(A){$clear(this.poller);}else{this.poller=function(){if(!this.pollingPaused){this.assert();}}.periodical(this.options.pollInterval,this);}return this;},stopPolling:function(){this.pollingPaused=true;return this.poll(true);},startPolling:function(){this.pollingPaused=false;return this.poll();}});window.addEvent("domready",function(){var B=$("login");if(!B){return false;}var C=B.getElements("label.overlay"),A=B.getElements("input.text").each(function(D,E){new TextOverlay(D,C[E],{poll:true,onTextShow:function(G,F){F.toggleClass("off");
},onTextHide:function(G,F){F.toggleClass("off");}});});});